import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as t,o as n}from"./app-DtG3coGW.js";const r={};function o(i,e){return n(),p("div",null,[...e[0]||(e[0]=[t('<h1 id="开发小程序的几种方式" tabindex="-1"><a class="header-anchor" href="#开发小程序的几种方式"><span>开发小程序的几种方式</span></a></h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>小程序是运行‌在 APP 中的一种随⁡用随开的程序，是前端开发领域的应用形态之一，⁠就像 PC 网站、H5 网站和 APP 一样。</p><p>小程序开发‌其实非常简单，一句⁡话：只要你会前端，就会开发小程序！</p><h3 id="为什么要做小程序" tabindex="-1"><a class="header-anchor" href="#为什么要做小程序"><span>为什么要做小程序？</span></a></h3><p>我们从几个角度来说明：</p><p>1）用户角度：使用方便</p><p>相信只要用‌过小程序的朋友，都⁡能感受到它的方便，不用安装、随用随开⁠、还能通过分享链接打开，这点完胜 APP。</p><p>但是小程序的用‌户体验一般是不如 APP 的⁡，毕竟受到了宿主（比如微信）的限制。      ⁠</p><p>2）开发角度：开发成本低</p><p>开发小程序和开发‌一个网页的语法、流程和方法几乎⁡完全一致，所以上面也说了，只要你会前端，就会开发小程序。此外⁠，目前小程序的开发工具和生态都比较完善，也可以降低开发难度。</p><p>3）产品角度：上线成本低</p><p>小程序不需‌要在各个应用商店提交⁡审核，就可以快速上线。虽然也要在小程序平⁠台审核，但个人感觉比在应用商店过审方便一些。</p><p>4）老板角‌度：省钱     ⁡                  ⁠</p><p>小程序前端‌运行在宿主 APP⁡ 里，不用单独购买一个服务器来部署前⁠端（当然，后端还是需要服务器的）。</p><p>5）运维角度：更安全性</p><p>因为小程序‌是运行在宿主 APP⁡ 里（比如微信或支付宝），所以运行时会受⁠到严格的安全限制，前端几乎不用担心被攻击。</p><p>6）运营角度：流量大，容易裂变</p><p>这可能是越来‌越多开发者选择小程序最⁡重要的原因，小程序可以利用宿主 APP 本身⁠的流量，打开率高、易被搜索发现、也容易被传播分享。</p><p>如果你要快速上线一个自‌己的产品，不止有能用、还要考虑运营、数据分⁡析、推广裂变、运维，那么小程序无疑是最合适的，没有之一！火爆的 “羊了个羊” 就是最⁠好的例子，但凡要下 APP 或者只是个网站，传播速度都不会有朋友圈那么快。</p><p>7）求职角度（面向薪资编程）：对前端同学来说是加分项</p><p>大多数公司是没有‌ “小程序开发” 这一岗位的，一⁡般都统称为前端开发。</p><h3 id="小程序生态" tabindex="-1"><a class="header-anchor" href="#小程序生态"><span>小程序生态</span></a></h3><p>小程序依赖‌ APP 环境作为⁡宿主，国内互联网大厂基本都有自己的小⁠程序，可谓是百家争鸣。</p><p>比如微信小‌程序、支付宝小程序⁡、百度小程序、抖音小程序、爱奇艺小程⁠序等等。。。</p><p>但毫无疑问，‌微信作为国内早期的小程序⁡入局产品，流量最大、小程序最多，所以如果你要学习⁠小程序开发的话，强烈推荐从微信小程序开始学起。</p><h3 id="开发小程序的几种方式-1" tabindex="-1"><a class="header-anchor" href="#开发小程序的几种方式-1"><span>开发小程序的几种方式</span></a></h3><h4 id="_1、原生开发" tabindex="-1"><a class="header-anchor" href="#_1、原生开发"><span>1、原生开发</span></a></h4><p>所谓 “原生”，就是不加任何封装和修饰的，官方提供的语法，基本等同于前端三件套 HTML + CSS + JS。</p><p>优点：</p><ol><li>最直接、上手相对容易，开发用到的语法和 API 都能在文档中查到。</li><li>因为不存在封装，所以出了问题更容易定位和解决。</li></ol><p>缺点：</p><ol><li>可用组件少、语法不灵活、很多东西都要自己手写，会导致代码量大、开发效率低。</li><li>不同小程序宿主 APP 的语法会有一些区别，开发跨 APP 小程序成本更高。</li></ol><h4 id="_2、框架开发" tabindex="-1"><a class="header-anchor" href="#_2、框架开发"><span>2、框架开发</span></a></h4><p>在原生开发‌的基础上，使用别人开⁡发好的、现成的框架和组件库，比如 mpv⁠ue 框架和 Vant-weapp 组件库。</p><p>优点：</p><ol><li>写更少的代码，使得代码更简洁，能提高开发效率与代码的可维护性。</li><li>小程序框架和前端框架的语法极为相似（甚至接近一致），减少学习成本，提高了开发效率。</li></ol><p>缺点：</p><ol><li>有些框架封装得太好了，不深入了解它的话，问题的排查成本高</li><li>框架不一定能覆盖你所有的需求，一旦遇到框架无法支持的语法时，就容易束手无策</li><li>框架的更新迭代速度太快了，更新框架后可能会出现新 Bug</li></ol><h4 id="_3、跨端开发" tabindex="-1"><a class="header-anchor" href="#_3、跨端开发"><span>3、跨端开发</span></a></h4><p>跨端开发是指‌：只编写一套代码，通过⁡框架或工具自动帮你生成支持多个平台的小程序，⁠甚至是其他产品形态，比如 H5 页面、APP 等。</p><p>比较有代表性的跨端开发框架就是 Uniapp。</p><p>优点：只用编写和维护同一套代码，大幅节约开发成本</p><p>缺点：跨端开发框架并不‌能完美适配所有平台，还是要针对不同的平台编⁡写一些补丁代码，而且和框架开发一样，一旦后期才发现某个功能不支持你需要的那个平台，可⁠能已经无力回天了（更换跨端开发框架成本太大），所以前期的技术选型真的很重要。</p><h4 id="_4、低代码开发" tabindex="-1"><a class="header-anchor" href="#_4、低代码开发"><span>4、低代码开发</span></a></h4><p>所谓低代码（‌或者零代码），就是写最少⁡的代码（甚至是不写代码），通过在一个可视化页面上⁠进行拖拉拽、编写一些配置，就能开发出一个小程序。</p><p>如腾讯的 WeDa、钉钉的宜搭等等。</p><p>优点：开发成本极低，甚至连复制粘贴都不用！</p><p>缺点：别人‌给你封装的工具如果太⁡好用，不仅你学习不到什么开发经验，而且和⁠跨端开发一样，出了 Bug 你可能根本无从下手。</p><h4 id="_5、找别人开发" tabindex="-1"><a class="header-anchor" href="#_5、找别人开发"><span>5、找别人开发</span></a></h4><p>最省事的开发方式就是找别人做！早在几年前，就有各种小程序定制的服务商了。而近几年，微信也推出了自己官方的小程序服务市场。如果你不是为了学习、只是希望有一个小程序，那么去 <a href="https://fuwu.weixin.qq.com/search?tab=1&amp;category=1-10001-7-8-9-10-11&amp;serviceType=1-10&amp;industry=&amp;scene=&amp;type=" target="_blank" rel="noopener noreferrer">微信服务市场</a> 、或者找 <a href="https://cloud.tencent.com/solution/la" target="_blank" rel="noopener noreferrer">云服务商官方的小程序解决方案</a> ，花钱就能搞定了~</p><h4 id="_6、chatgpt-开发" tabindex="-1"><a class="header-anchor" href="#_6、chatgpt-开发"><span>6、ChatGPT 开发</span></a></h4><p>AI 时代‌已经到来，不妨让 ⁡ChatGPT 帮你开发一个小程序。</p>',53)])])}const l=a(r,[["render",o]]),c=JSON.parse('{"path":"/guide/%E8%B7%A8%E7%AB%AF%E4%B8%8E%E7%A7%BB%E5%8A%A8%E7%AB%AF/%E7%A7%BB%E5%8A%A8%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F.html","title":"开发小程序的几种方式","lang":"zh-CN","frontmatter":{"description":"开发小程序的几种方式 介绍 小程序是运行‌在 APP 中的一种随⁡用随开的程序，是前端开发领域的应用形态之一，⁠就像 PC 网站、H5 网站和 APP 一样。 小程序开发‌其实非常简单，一句⁡话：只要你会前端，就会开发小程序！ 为什么要做小程序？ 我们从几个角度来说明： 1）用户角度：使用方便 相信只要用‌过小程序的朋友，都⁡能感受到它的方便，不用安装...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发小程序的几种方式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-19T15:34:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yjieyan\\",\\"url\\":\\"https://yjieyan.github.io/knowledge\\"}]}"],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/knowledge/guide/%E8%B7%A8%E7%AB%AF%E4%B8%8E%E7%A7%BB%E5%8A%A8%E7%AB%AF/%E7%A7%BB%E5%8A%A8%E7%AB%AF/%E5%BC%80%E5%8F%91%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"学习与分享"}],["meta",{"property":"og:title","content":"开发小程序的几种方式"}],["meta",{"property":"og:description","content":"开发小程序的几种方式 介绍 小程序是运行‌在 APP 中的一种随⁡用随开的程序，是前端开发领域的应用形态之一，⁠就像 PC 网站、H5 网站和 APP 一样。 小程序开发‌其实非常简单，一句⁡话：只要你会前端，就会开发小程序！ 为什么要做小程序？ 我们从几个角度来说明： 1）用户角度：使用方便 相信只要用‌过小程序的朋友，都⁡能感受到它的方便，不用安装..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-19T15:34:32.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-19T15:34:32.000Z"}]]},"git":{"createdTime":1760888072000,"updatedTime":1760888072000,"contributors":[{"name":"yjy","username":"yjy","email":"2192242196@qq.com","commits":1,"url":"https://github.com/yjy"}]},"readingTime":{"minutes":5.47,"words":1642},"filePathRelative":"guide/跨端与移动端/移动端/开发小程序的几种方式.md","autoDesc":true}');export{l as comp,c as data};
