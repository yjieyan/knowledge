import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as o,o as n}from"./app-Bp9_QJkp.js";const e={};function g(l,t){return n(),s("div",null,[...t[0]||(t[0]=[o('<hr><h3 id="一、-带宽-vs-延迟-经典比喻" tabindex="-1"><a class="header-anchor" href="#一、-带宽-vs-延迟-经典比喻"><span>一、 带宽 vs 延迟：经典比喻</span></a></h3><ul><li><p><strong>带宽</strong></p><ul><li><strong>定义</strong>：单位时间内能从一端传输到另一端的数据量，即<strong>数据的吞吐能力</strong>。好比 <strong>水管的直径</strong>。</li><li><strong>单位</strong>：Mbps (Megabits per second), Gbps。</li><li><strong>影响</strong>：决定了你<strong>下载/上传一个大文件的最终速度</strong>。带宽越高，下载一个 1GB 的电影文件就越快。</li></ul></li><li><p><strong>延迟</strong></p><ul><li><strong>定义</strong>：一个数据包从源端到目的端所需要的时间，即<strong>数据的往返时间</strong>。好比 <strong>水在水管中流动的速度</strong>。</li><li><strong>单位</strong>：ms (毫秒)。</li><li><strong>影响</strong>：决定了你<strong>得到一个响应的快慢</strong>。延迟越低，点击按钮后看到页面反应的等待时间就越短。</li></ul></li></ul><p><strong>一个经典的“卡车运货”比喻：</strong></p><ul><li><strong>高带宽，高延迟</strong>：一条<strong>非常宽阔（高带宽）但很长（高延迟）</strong> 的高速公路。一辆大卡车（数据包）需要开很久才能到达，但一旦到达，它能卸下海量的货物（数据）。</li><li><strong>低带宽，低延迟</strong>：一条<strong>狭窄（低带宽）但很短（低延迟）</strong> 的城市道路。一辆小卡车可以很快地往返，但每次只能运送少量货物。</li></ul><p><strong>对前端的意义</strong>：<br> 对于现代 Web 应用，尤其是交互复杂的 SPA，<strong>延迟往往是比带宽更重要的性能瓶颈</strong>。因为用户操作（如点击、搜索）触发的大多是大量的小请求，而不是单个大文件下载。这些小请求的响应速度直接由延迟决定。</p><hr><h3 id="二、-前端可感知的「延迟」指标" tabindex="-1"><a class="header-anchor" href="#二、-前端可感知的「延迟」指标"><span>二、 前端可感知的「延迟」指标</span></a></h3><p>前端工程师关心的“延迟”，已经不仅仅是网络层的 RTT 了，而是<strong>从用户发出指令到看到结果之间，所有环节耗时的总和</strong>。以下是几个关键且可衡量的指标：</p><h4 id="_1-网络层面的延迟" tabindex="-1"><a class="header-anchor" href="#_1-网络层面的延迟"><span>1. 网络层面的延迟</span></a></h4><ul><li><strong>RTT</strong>：数据包从浏览器到服务器再返回的<strong>往返时间</strong>。这是最基础的网络延迟，受物理距离、网络路由质量影响。TCP 握手、TLS 握手都至少需要 1个 RTT。</li><li><strong>TTFB</strong>：<strong>首字节时间</strong>。从浏览器发起请求，到收到服务器返回的<strong>第一个字节</strong>的时间。 <ul><li><strong>意义</strong>：它反映了 <strong>“后端处理时间 + 网络传输时间”</strong>。如果 TTFB 很高，说明服务器处理慢或者网络链路差。</li><li><strong>测量</strong>：在 Chrome DevTools 的 Network 面板中可直接看到。</li></ul></li><li><strong>DNS 查询时间</strong>：将域名解析为 IP 地址所需的时间。DNS 缓存可以有效降低此时间。</li></ul><h4 id="_2-浏览器渲染关键路径的延迟" tabindex="-1"><a class="header-anchor" href="#_2-浏览器渲染关键路径的延迟"><span>2. 浏览器渲染关键路径的延迟</span></a></h4><p>这些指标直接决定了用户对“快”与“慢”的感知。</p><ul><li><strong>FP</strong>：<strong>首次绘制</strong>。浏览器第一次将任何像素渲染到屏幕上的时间（可能是背景色或一道边框）。标志着页面从空白到“有点东西了”。</li><li><strong>FCP</strong>：<strong>首次内容绘制</strong>。浏览器第一次渲染出<strong>来自 DOM 的实际内容</strong>的时间（如文本、图片、SVG等）。这比 FP 更有意义，用户开始看到有用的信息了。</li><li><strong>LCP</strong>：<strong>最大内容绘制</strong>。页面<strong>可视区域内</strong>最大的图像或文本块完成渲染的时间。 <ul><li><strong>意义</strong>：用于衡量页面的<strong>主要内容</strong>加载完毕的时机。用户会认为 LCP 发生时，页面就已经“可用”了。通常应发生在 <strong>2.5 秒</strong> 内。</li><li><strong>影响因素</strong>：大图片、大段文本的加载和渲染速度。</li></ul></li><li><strong>FID</strong>：<strong>首次输入延迟</strong>。用户<strong>第一次</strong>与页面交互（点击链接、按钮等）到浏览器<strong>实际开始处理事件</strong>的延迟时间。 <ul><li><strong>意义</strong>：衡量页面的<strong>交互响应度</strong>。如果主线程被长任务（Long Tasks）阻塞，FID 就会很高，用户会感觉页面“卡顿”。</li><li><strong>目标</strong>：应低于 <strong>100 毫秒</strong>。</li></ul></li><li><strong>INP</strong>：<strong>交互到下次绘制</strong>。一个 newer 的指标，用于替代 FID。它观察页面<strong>所有</strong>的用户交互（点击、敲键盘、触摸），并报告其中最慢的延迟（排除 outliers）。 <ul><li><strong>意义</strong>：更全面地评估页面的整体交互响应性。</li></ul></li><li><strong>CLS</strong>：<strong>累积布局偏移</strong>。测量页面在整个生命周期中，发生的<strong>意外布局偏移</strong>的总分。 <ul><li><strong>意义</strong>：衡量页面的<strong>视觉稳定性</strong>。突然插入的图片、广告、动态加载的内容会导致页面内容跳动，体验很差。</li><li><strong>计算方式</strong>：<code>影响比例 * 移动比例</code>。目标值应低于 <strong>0.1</strong>。</li></ul></li></ul><h4 id="_3-应用级别的延迟" tabindex="-1"><a class="header-anchor" href="#_3-应用级别的延迟"><span>3. 应用级别的延迟</span></a></h4><p>这是从业务角度定义的延迟，与用户体验直接挂钩。</p><ul><li><strong>TTI</strong>：<strong>可交互时间</strong>。页面已经渲染出足够的内容，并且事件处理函数已经注册，能够快速响应用户交互的时间点。</li><li><strong>业务关键接口的响应时间</strong>：例如： <ul><li><strong>搜索接口延迟</strong>：从用户点击“搜索”到看到结果列表的时间。</li><li><strong>登录接口延迟</strong>：从提交账号密码到跳转或提示成功的时间。</li><li><strong>提交订单延迟</strong>：从点击“支付”到跳转支付页面或提示成功的时间。</li></ul></li></ul><hr><h3 id="三、-如何关联与优化" tabindex="-1"><a class="header-anchor" href="#三、-如何关联与优化"><span>三、 如何关联与优化？</span></a></h3><p>理解了这些指标，我们就可以有针对性地进行优化：</p><table><thead><tr><th style="text-align:left;">延迟指标</th><th style="text-align:left;">核心优化方向</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>RTT / TTFB</strong></td><td style="text-align:left;">使用 CDN、后端优化、数据库查询优化、开启 HTTP/2/3、预连接 (<code>&lt;link rel=&quot;preconnect&quot;&gt;</code>)</td></tr><tr><td style="text-align:left;"><strong>FCP / LCP</strong></td><td style="text-align:left;">优化关键渲染路径、消除渲染阻塞资源、懒加载非关键图片/视频、优化 CSS/JS 大小、服务端渲染</td></tr><tr><td style="text-align:left;"><strong>FID / INP</strong></td><td style="text-align:left;">优化和拆分长任务、减少主线程工作量、使用 Web Worker、避免大型 JavaScript 执行</td></tr><tr><td style="text-align:left;"><strong>CLS</strong></td><td style="text-align:left;">为图片和视频设置明确的 <code>width</code> 和 <code>height</code>、预留广告位空间、避免在现有内容上方插入新内容</td></tr><tr><td style="text-align:left;"><strong>业务接口延迟</strong></td><td style="text-align:left;">前端防抖/节流、骨架屏、乐观 UI、后端接口性能优化、缓存</td></tr></tbody></table><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><ol><li><strong>带宽与延迟</strong>：带宽关乎“<strong>一次能运多少</strong>”，延迟关乎“<strong>运一趟要多久</strong>”。对于交互式 Web 应用，<strong>降低延迟往往比增加带宽带来的体验提升更明显</strong>。</li><li><strong>前端延迟是一个系统工程</strong>：它不再仅仅是网络 RTT，而是涵盖了 <strong>网络传输、服务器处理、浏览器解析渲染、JavaScript 执行</strong> 这一完整链条。</li><li><strong>指标是优化的罗盘</strong>：像 <strong>LCP、FID、CLS</strong> 这样的 Core Web Vitals 指标，为我们提供了量化用户体验的标准。前端性能优化的核心工作，就是通过各种技术手段，不断降低这些指标所度量的延迟，从而为用户提供一个快速、流畅、稳定的使用体验。</li></ol>',23)])])}const d=r(e,[["render",g]]),p=JSON.parse('{"path":"/guide/computer/%E7%BD%91%E7%BB%9C/%E5%B8%A6%E5%AE%BDvs%E5%BB%B6%E8%BF%9F.html","title":"","lang":"zh-CN","frontmatter":{"description":"一、 带宽 vs 延迟：经典比喻 带宽 定义：单位时间内能从一端传输到另一端的数据量，即数据的吞吐能力。好比 水管的直径。 单位：Mbps (Megabits per second), Gbps。 影响：决定了你下载/上传一个大文件的最终速度。带宽越高，下载一个 1GB 的电影文件就越快。 延迟 定义：一个数据包从源端到目的端所需要的时间，即数据的往返...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-19T15:34:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yjieyan\\",\\"url\\":\\"https://yjieyan.github.io/knowledge\\"}]}"],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/knowledge/guide/computer/%E7%BD%91%E7%BB%9C/%E5%B8%A6%E5%AE%BDvs%E5%BB%B6%E8%BF%9F.html"}],["meta",{"property":"og:site_name","content":"学习与分享"}],["meta",{"property":"og:description","content":"一、 带宽 vs 延迟：经典比喻 带宽 定义：单位时间内能从一端传输到另一端的数据量，即数据的吞吐能力。好比 水管的直径。 单位：Mbps (Megabits per second), Gbps。 影响：决定了你下载/上传一个大文件的最终速度。带宽越高，下载一个 1GB 的电影文件就越快。 延迟 定义：一个数据包从源端到目的端所需要的时间，即数据的往返..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-19T15:34:32.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-19T15:34:32.000Z"}]]},"git":{"createdTime":1760716761000,"updatedTime":1760888072000,"contributors":[{"name":"yjy","username":"yjy","email":"2192242196@qq.com","commits":3,"url":"https://github.com/yjy"}]},"readingTime":{"minutes":5.57,"words":1670},"filePathRelative":"guide/computer/网络/带宽vs延迟.md","autoDesc":true}');export{d as comp,p as data};
